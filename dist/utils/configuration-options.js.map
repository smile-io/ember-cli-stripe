{"version":3,"file":"configuration-options.js","sources":["../../src/utils/configuration-options.js"],"sourcesContent":["/**\n * All the configuration options supported by Stripe Checkout.\n * Docs: https://stripe.com/docs/checkout#integration-custom\n * @type {Array}\n */\nconst configurationOptions = [\n  // Required\n  'key',\n\n  // Highly recommended\n\n  /**\n   * A relative or absolute URL pointing to a square image of your brand or\n   * product. The recommended minimum size is 128x128px. The supported image\n   * types are: .gif, .jpeg, and .png.\n   */\n  'image',\n\n  /**\n   * The name of your company or website.\n   */\n  'name',\n\n  /**\n   * A description of the product or service being purchased.\n   */\n  'description',\n\n  /**\n   * The amount (in cents) that's shown to the user. Note that you will still\n   * have to explicitly include the amount when you create a charge using\n   * the API.\n   */\n  'amount',\n\n  /**\n   * Specify auto to display Checkout in the user's preferred language,\n   * if available. English will be used by default.\n   */\n  'locale',\n\n  /**\n   * Specify whether Checkout should validate the billing postal code\n   * (true or false). The default is false, but we highly recommend\n   * setting to true.\n   */\n  'zipCode',\n\n  /**\n   * Specify whether Checkout should collect the user's billing address\n   * (true or false). The default is false.\n   */\n  'billingAddress',\n\n  // Optional\n\n  /**\n   * The currency of the amount (3-letter ISO code). The default is USD.\n   */\n  'currency',\n\n  /**\n   * The label of the payment button in the Checkout form (e.g. Subscribe,\n   * Pay {{amount}}, etc.). If you include {{amount}} in the label value,\n   * it will be replaced by a localized version of data-amount. Otherwise,\n   * a localized data-amount will be appended to the end of your label.\n   * Checkout does not translate custom labels to the user's preferred\n   * language.\n   */\n  'panelLabel',\n\n  /**\n   * Specify whether Checkout should collect the user's shipping address\n   * (true or false). The default is false.\n   */\n  'shippingAddress',\n\n  /**\n   * If you already know the email address of your user, you can provide it\n   * to Checkout to be prefilled.\n   */\n  'email',\n\n  /**\n   * Specify whether to include the option to \"Remember Me\" for future\n   * purchases (true or false). The default is true.\n   */\n  'allowRememberMe',\n\n  /**\n   * Specify whether to accept Bitcoin (true or false). The default is false.\n   */\n  'bitcoin',\n\n  /**\n   * Specify whether to accept Alipay (\"auto\", true, or false). The\n   * default is false.\n   */\n  'alipay',\n\n  /**\n   * Specify if you need reusable access to the customer's Alipay account\n   * (true or false). The default is false.\n   */\n  'alipayReusable',\n];\n\nconst compactOptions = (options) => {\n  let cleanedOptions = {};\n\n  for (let key in options) {\n    if (\n      configurationOptions.includes(key) &&\n      typeof options[key] !== 'undefined'\n    ) {\n      cleanedOptions[key] = options[key];\n    }\n  }\n\n  return cleanedOptions;\n};\n\nexport { configurationOptions, compactOptions };\n"],"names":["configurationOptions","compactOptions","options","cleanedOptions","key","includes"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,oBAAoB,GAAG;AAC3B;AACA,KAAK;AAEL;;AAEA;AACF;AACA;AACA;AACA;AACE,OAAO;AAEP;AACF;AACA;AACE,MAAM;AAEN;AACF;AACA;AACE,aAAa;AAEb;AACF;AACA;AACA;AACA;AACE,QAAQ;AAER;AACF;AACA;AACA;AACE,QAAQ;AAER;AACF;AACA;AACA;AACA;AACE,SAAS;AAET;AACF;AACA;AACA;AACE,gBAAgB;AAEhB;;AAEA;AACF;AACA;AACE,UAAU;AAEV;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE,YAAY;AAEZ;AACF;AACA;AACA;AACE,iBAAiB;AAEjB;AACF;AACA;AACA;AACE,OAAO;AAEP;AACF;AACA;AACA;AACE,iBAAiB;AAEjB;AACF;AACA;AACE,SAAS;AAET;AACF;AACA;AACA;AACE,QAAQ;AAER;AACF;AACA;AACA;AACE,gBAAgB;AAGZC,MAAAA,cAAc,GAAIC,OAAO,IAAK;EAClC,IAAIC,cAAc,GAAG,EAAE;AAEvB,EAAA,KAAK,IAAIC,GAAG,IAAIF,OAAO,EAAE;AACvB,IAAA,IACEF,oBAAoB,CAACK,QAAQ,CAACD,GAAG,CAAC,IAClC,OAAOF,OAAO,CAACE,GAAG,CAAC,KAAK,WAAW,EACnC;AACAD,MAAAA,cAAc,CAACC,GAAG,CAAC,GAAGF,OAAO,CAACE,GAAG,CAAC;AACpC;AACF;AAEA,EAAA,OAAOD,cAAc;AACvB;;;;"}